/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
option optimize_for = LITE_RUNTIME;

package perfetto.proto;

// This message is sent from Producer(s) to the tracing Service when registering
// to advertise their capabilities. It describes the structure of tracing
// structs that will be produced by the data source and the supported filters.
message DataSourceDescriptor {
  string name = 1;  // e.g., "linux.ftrace", "chromium.tracing"

  enum Mode {
    // The data source, once enabled, will spontaneously write data into the
    // tracing buffer (e.g., kernel ftrace events).
    CONTINUOUS = 0;

    // The data source needs to be triggered to inject a new snapshot into the
    // tracing buffer (e.g., process stats). TODO: not implemented yet.
    POLLING = 1;
  }
  Mode mode = 2;

  // TODO: this should have a structure to enabled reflection of the proto
  // fields emitted (see go/perfetto-logging).
}
