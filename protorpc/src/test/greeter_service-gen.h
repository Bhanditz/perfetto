/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef PROTORPC_SRC_TEST_GREETER_SERVICE_GEN_H_
#define PROTORPC_SRC_TEST_GREETER_SERVICE_GEN_H_

////////////////////////////////////////////////////////////////////////////////
// TODO: this should be autogenerated
////////////////////////////////////////////////////////////////////////////////
#include "protorpc/service_descriptor.h"
#include "protorpc/service_reply.h"
#include "protorpc/service_request.h"
#include "protorpc/service_stub.h"
#include "protorpc/service.h"

namespace protorpc_test {

class GreeterRequest;
class GreeterReply;

class Greeter {
 public:

  // Exposed to the Host side.
  class Service : public ::perfetto::protorpc::Service {
   public:
    virtual ~Service();

    // ::perfetto::protorpc::Service implementation.
    ::perfetto::protorpc::ServiceDescriptor GetDescriptor() override;

    // These methods must be overridden by the user-defined service class.
    using GreeterRequest =
        ::perfetto::protorpc::ServiceRequest<::protorpc_test::GreeterRequest>;
    using GreeterReply =
        ::perfetto::protorpc::ServiceReply<::protorpc_test::GreeterReply>;
    virtual void SayHello(GreeterRequest, GreeterReply) = 0;
    virtual void SayGoodbye(GreeterRequest, GreeterReply) = 0;
  };

  // Exposed to the Client side.
  class ServiceStub : public ::perfetto::protorpc::ServiceStub {
   public:
    virtual ~ServiceStub() = default;
    using GreeterReplyCallback = std::function<void()>;
        ::perfetto::protorpc::ServiceReply<::protorpc_test::GreeterReply>;

    virtual void SayHello(GreeterRequest, GreeterReply) = 0;
    virtual void SayGoodBye(GreeterRequest, GreeterReplyCallback) = 0;
  };
};

}  // namespace protorpc_test

#endif  // PROTORPC_SRC_TEST_GREETER_SERVICE_GEN_H_
