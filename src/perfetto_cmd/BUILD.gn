# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../gn/perfetto.gni")
import("../../gn/proto_library.gni")

template("include_binary") {
  name = target_name
  action_name = name + "_gen"
  action(action_name) {
    assert(defined(invoker.source))
    if (defined(invoker.deps)) {
      deps = invoker.deps
    }

    script = rebase_path("../../tools/include_binary.py", root_build_dir)
    inputs = [
      invoker.source,
    ]
    outputs = [
     "$target_gen_dir/$name.cc",
     "$target_gen_dir/$name.h",
    ]
    args = [
      rebase_path(inputs[0], root_build_dir),
      rebase_path("$target_gen_dir/$name", root_build_dir),
    ]
  }
  source_set(target_name) {
    deps = [":$action_name"]
    sources = get_target_outputs(":$action_name")
  }
}

include_binary("trace_config_descriptor") {
  deps = [
    "../../protos/perfetto/config:lite",
  ]
  source = "$root_gen_dir/protos/perfetto/trace/config.descriptor"
}

source_set("perfetto_cmd") {
  public_deps = [
    ":protos",
    "../../include/perfetto/traced",
  ]
  deps = [
    "../../buildtools:protobuf_lite",
    "../../gn:default_deps",
    "../../protos/perfetto/config:lite",
    "../base",
    "../protozero",
    "../tracing:ipc_consumer",
    ":trace_config_descriptor",
  ]
  sources = [
    "pbtxt_to_pb.cc",
    "pbtxt_to_pb.h",
    "perfetto_cmd.cc",
    "perfetto_cmd.h",
    "rate_limiter.cc",
    "rate_limiter.h",
  ]
}

proto_library("protos") {
  generate_python = false
  deps = []
  sources = [
    "descriptor.proto",
    "perfetto_cmd_state.proto",
  ]
  proto_in_dir = perfetto_root_path
  proto_out_dir = perfetto_root_path
}

source_set("unittests") {
  testonly = true
  public_deps = []
  deps = [
    ":perfetto_cmd",
    "../../gn:default_deps",
    "../../gn:gtest_deps",
    "../../include/perfetto/base",
    "../../protos/perfetto/config:lite",
  ]
  sources = [
    "pbtxt_to_pb_unittest.cc",
    "rate_limiter_unittest.cc",
  ]
}
